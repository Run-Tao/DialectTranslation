import numpy
def cosine_similarity(v1, v2):
    return numpy.dot(v1, v2) / (numpy.linalg.norm(v1) * numpy.linalg.norm(v2))

def cosine_distance(v1, v2):
    return 1 - cosine_similarity(v1, v2)

def average_cosine_similarity(m1, m2):
    return sum([cosine_similarity(v1, v2) for v1, v2 in zip(m1, m2)])/len(m1)

def average_cosine_distance(m1, m2):
    return sum([cosine_distance(v1, v2) for v1, v2 in zip(m1, m2)])/len(m1)

A = numpy.array([[1, 2], [4, 5], [7, 8]])
B = numpy.array([[9, 8], [6, 5], [3, 2]])
C = numpy.array([[1, 0], [1, 0], [1, 0]])
D = numpy.array([[1, 1], [1, 1], [1, 1]])
print(average_cosine_similarity(A, B))
print(average_cosine_similarity(C, D))
print(average_cosine_distance(A, B))
print(average_cosine_distance(C, D))